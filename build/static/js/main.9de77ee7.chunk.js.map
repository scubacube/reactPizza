{"version":3,"sources":["components/Button.jsx","components/Categories.jsx","components/SortItems.jsx","assets/img/pizza-logo.svg","components/Header.jsx","components/PizzaItem/PizzaItem.jsx","components/PizzaItem/PizzaLoadingBlock.jsx","components/CartItem.jsx","assets/img/empty-cart.png","pages/Cart.jsx","redux/actions/cart.js","redux/actions/setPizzas.js","pages/Main.jsx","redux/actions/filters.js","App.js","redux/reducers/filters.js","redux/reducers/pizzas.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Button","onClick","className","outline","children","href","classnames","Categories","activeCategory","onClickCategory","items","useState","popup","setPopup","sortRef","useRef","handleOutsideClick","e","path","composedPath","includes","current","useEffect","document","body","addEventListener","listMobile","map","index","clickToActivate","list","el","ref","width","height","viewBox","fill","xmlns","d","valueOf","defaultProps","SortItems","props","onClickSortType","activeSortType","sortPopup","setSortPopup","activeLabel","find","type","name","Header","useSelector","cart","totalPrice","totalCount","to","src","logo","alt","stroke","strokeWidth","strokeLinecap","strokeLinejoin","PizzaItem","id","imageUrl","types","price","onClickAddPizza","count","sizes","activeSize","setActiveSize","activeType","setActiveType","element","PizzaLoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","CartItem","size","onDeletePizza","minusItem","plusItem","Cart","dispatch","useDispatch","pizzas","Object","keys","key","window","confirm","payload","deletePizza","OnMinusItem","OnPlusItem","length","emptyCartImage","setLoaded","value","categoryNames","sortItems","order","Main","filters","isLoading","cartItems","category","sortBy","onSelectCategory","React","useCallback","setCategory","setSortBy","obj","addPizzaToCart","axios","get","then","res","data","catch","err","console","log","fetchPizzas","Array","_","App","exact","component","initState","getTotalPrice","arr","reduce","sum","object","rootReducer","combineReducers","state","action","currentPizzaItems","newItems","values","allPizzas","concat","apply","currentTotalPrice","currentTotalCount","oldItems","slice","NewObjectItems","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9de77ee7.chunk.js","sourcesContent":["import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n// \"button button--cart button--outline\"\r\nconst Button = ({onClick, className, outline, children}) => {\r\n    return (\r\n        <button href=\"/cart.html\" onClick={onClick} className={classnames('button',\r\n            className,\r\n            {'button--outline' : outline})}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, {useEffect, useRef, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Categories({ activeCategory, onClickCategory, items }) {\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    const sortRef = useRef();\r\n    const togglePopup = () => {\r\n        setPopup(!popup);\r\n\r\n    }\r\n\r\n    const handleOutsideClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath());\r\n        if (!path.includes(sortRef.current)) {\r\n            setPopup(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick);\r\n    }, []);\r\n\r\n    const clickToActivate = (index) => {\r\n        onClickCategory(index);\r\n        setPopup(false);\r\n    }\r\n\r\n    const listMobile = items.map((e, index) => (<li onClick={() => clickToActivate(index)} key={e}>{e}</li>))\r\n\r\n    const list = items.map((el, index) => (\r\n        <li className={activeCategory === index ? 'active' : ''}\r\n            onClick={() => {onClickCategory(index)}}\r\n            key={el}\r\n        >{el}</li>\r\n    ))\r\n\r\n    return (\r\n        <>\r\n            <div ref={sortRef} className=\"sortMobile\">\r\n                <div className=\"sortMobile__label\">\r\n                    <svg className={popup ? 'opened' : ''}\r\n                         width=\"10\"\r\n                         height=\"6\"\r\n                         viewBox=\"0 0 10 6\"\r\n                         fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                            fill=\"#2C2C2C\"\r\n                        />\r\n                    </svg>\r\n                    <span onClick={togglePopup}>\r\n                        {activeCategory === null ? 'all' : items[activeCategory].valueOf()}\r\n                    </span>\r\n                </div>\r\n                {popup &&\r\n                <div className=\"sortMobile__popup\">\r\n                    <ul>\r\n                        {listMobile}\r\n                    </ul>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n\r\n            <div className=\"categories\">\r\n                <ul>\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nCategories.propTypes = {\r\n    activeCategory: PropTypes.number,\r\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onClickCategory: PropTypes.func\r\n}\r\nCategories.defaultProps = {\r\n    activeCategory: 0, items: []\r\n}\r\nexport default Categories;","import React, {useState, useEffect, useRef} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SortItems(props) {\r\n    const {items, onClickSortType, activeSortType} = props;\r\n\r\n    const [sortPopup, setSortPopup] = useState(false);\r\n    const activeLabel = items.find(el => el.type === activeSortType).name\r\n\r\n    const sortRef = useRef();\r\n\r\n    const togglePopup = () => {\r\n        setSortPopup(!sortPopup);\r\n    }\r\n\r\n    const handleOutsideClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath());\r\n        if (!path.includes(sortRef.current)) {\r\n            setSortPopup(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick);\r\n    }, []);\r\n\r\n    const clickToActivate = (type) => {\r\n        onClickSortType(type);\r\n        setSortPopup(false);\r\n    }\r\n\r\n    const list = items.map((e) => (<li onClick={() => clickToActivate(e)} key={e.type}>{e.name}</li>))\r\n\r\n    return(\r\n        <div ref={sortRef} className=\"sort\">\r\n            <div className=\"sort__label\">\r\n                <svg className={sortPopup ? 'opened' : ''}\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Sort by:</b>\r\n                <span onClick={togglePopup}>{activeLabel}</span>\r\n            </div>\r\n            {sortPopup &&\r\n                <div className=\"sort__popup\">\r\n                    <ul>\r\n                        {list}\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nSortItems.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onClickSortType: PropTypes.func,\r\n    activeSortType: PropTypes.string.isRequired\r\n}\r\n\r\nSortItems.defaultProps = {\r\n    items: []\r\n}\r\n\r\nexport default SortItems;","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport logo from \"../assets/img/pizza-logo.svg\";\r\nimport {Button} from \"./index\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction Header() {\r\n    const {totalPrice, totalCount} = useSelector(( {cart} ) => ({\r\n        totalPrice: cart.totalPrice,\r\n        totalCount: cart.totalCount\r\n    }));\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__logo\">\r\n                    <Link to=\"/\">\r\n                        <img width=\"38\" src={logo} alt=\"Pizza logo\"/>\r\n                    </Link>\r\n                    <div>\r\n                        <h1>React Pizza</h1>\r\n                        <p>the most delicious pizza in the universe</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"header__cart\">\r\n                    <Link to=\"/cart\">\r\n                        <Button className=\"button--cart\" >\r\n                            <span>{totalPrice} Kč</span>\r\n                            <div className=\"button__delimiter\"></div>\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            <span>{totalCount}</span>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../Button\";\r\n\r\nfunction PizzaItem({id, imageUrl, name, types, price, onClickAddPizza, count, sizes}) {\r\n    const [activeSize, setActiveSize] = useState(sizes[0]);\r\n    const clickToActivateSize = (element) => {\r\n        setActiveSize(element);\r\n    }\r\n\r\n    const onAddPizza = (obj) => {\r\n        onClickAddPizza(obj);\r\n    }\r\n\r\n    const typeNames = ['Thin', 'Traditional'];\r\n    const [activeType, setActiveType] = useState(types[0]);\r\n    const clickToActivate = (element) => {\r\n        setActiveType(element);\r\n    }\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img\r\n                className=\"pizza-block__image\"\r\n                src={imageUrl}\r\n                alt=\"Pizza\"\r\n            />\r\n            <h4 className=\"pizza-block__title\">{name}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {typeNames.map((element, index) =>\r\n                        <li key={index} onClick={() => clickToActivate(index)}\r\n                            className={activeType === index ? 'active' : '' ||  !types.includes(index) ?\r\n                                                             'disabled': ''}>{element}</li>)}\r\n                </ul>\r\n                <ul>\r\n                    {\r\n                        sizes.map((el) => <li key={el} onClick={() => clickToActivateSize(el)}\r\n                                                     className={activeSize === el ? 'active' : ''\r\n                                                     }>{el} см.</li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">{price} Kč</div>\r\n                <Button onClick={() => onAddPizza({id, imageUrl, name, activeType, price, onClickAddPizza, activeSize})}\r\n                        className=\"button button--outline button--add\" outline>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Add</span>\r\n                    <i>{count}</i>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPizzaItem.propTypes = {\r\n    imageUrl: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    sizes: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    count: PropTypes.number.isRequired,\r\n    onClickAddPizza: PropTypes.func\r\n}\r\nPizzaItem.defaultProps = {\r\n    types: [],\r\n    sizes: [],\r\n    price: 0,\r\n    count: 0\r\n}\r\n\r\nexport default PizzaItem;","import React from 'react';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nexport const PizzaLoadingBlock = () => {\r\n    return (\r\n        <ContentLoader\r\n            speed={2}\r\n            width={280}\r\n            height={460}\r\n            viewBox=\"0 0 280 460\"\r\n            backgroundColor=\"#f3f3f3\"\r\n            foregroundColor=\"#ecebeb\"\r\n        >\r\n            <circle cx=\"140\" cy=\"124\" r=\"120\" />\r\n            <rect x=\"0\" y=\"288\" rx=\"4\" ry=\"4\" width=\"280\" height=\"28\" />\r\n            <rect x=\"0\" y=\"328\" rx=\"4\" ry=\"4\" width=\"280\" height=\"66\" />\r\n            <rect x=\"2\" y=\"404\" rx=\"6\" ry=\"6\" width=\"102\" height=\"50\" />\r\n            <rect x=\"133\" y=\"401\" rx=\"17\" ry=\"17\" width=\"143\" height=\"54\" />\r\n        </ContentLoader>\r\n    )\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CartItem({id, name, type, size, totalPrice, totalCount, onDeletePizza, minusItem, plusItem}) {\r\n    const onDeletePizzaFromItem = () => {\r\n        onDeletePizza(id);\r\n    }\r\n\r\n    const onMinusItem = () => {\r\n        minusItem(id)\r\n    }\r\n    const onPlusItem = () => {\r\n        plusItem(id)\r\n    }\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img\r\n                    className=\"pizza-block__image\"\r\n                    src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n                    alt=\"Pizza\"\r\n                />\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{name}</h3>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <div onClick={onMinusItem} className=\"button button--outline button--circle cart__item-count-minus\">\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n\r\n                </div>\r\n                <b>{totalCount}</b>\r\n                <div onClick={onPlusItem} className=\"button button--outline button--circle cart__item-count-plus\">\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{totalPrice}</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\" onClick={onDeletePizzaFromItem}>\r\n                <div className=\"button button--outline button--circle\">\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCartItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    totalPrice: PropTypes.number.isRequired,\r\n    totalCount: PropTypes.number.isRequired,\r\n    onDeletePizza: PropTypes.func\r\n}\r\nCartItem.defaultProps = {\r\n    types: 0,\r\n    size: 0,\r\n    price: 0,\r\n    count: 0\r\n}\r\n\r\nexport default CartItem;","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from 'react';\r\nimport {CartItem} from \"../components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearCart, deletePizza, minusItem, plusItem} from \"../redux/actions/cart\";\r\nimport emptyCartImage from \"../assets/img/empty-cart.png\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Cart() {\r\n    const dispatch = useDispatch();\r\n\r\n    const {items, totalPrice, totalCount} = useSelector(({cart}) => cart);\r\n\r\n    const pizzas = Object.keys(items).map(key => {\r\n        return items[key].items[0];\r\n    })\r\n\r\n    const onClearCart = () => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(clearCart());\r\n        }\r\n    }\r\n\r\n    const onDeletePizza = (id) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(deletePizza(id));\r\n        }\r\n    }\r\n\r\n    const OnMinusItem = (id) => {\r\n        dispatch(minusItem(id));\r\n    }\r\n    const OnPlusItem = (id) => {\r\n        dispatch(plusItem(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container container--cart\">\r\n                {totalCount ?\r\n                    <div className=\"cart\">\r\n                        <div className=\"cart__top\">\r\n                            <h2 className=\"content__title\">\r\n                                <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                        stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    <path\r\n                                        d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                        stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    <path\r\n                                        d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                        stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                </svg>\r\n                                Shopping Cart\r\n                            </h2>\r\n                            <div className=\"cart__clear\" onClick={onClearCart}>\r\n                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"/>\r\n                                    <path\r\n                                        d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                        stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                </svg>\r\n\r\n                                <span >Clear</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content__items\">\r\n                            {pizzas.map((el)  => <CartItem key={el.id}\r\n                                                           name={el.name}\r\n                                                           type={el.activeType}\r\n                                                           totalCount={items[el.id].items.length}\r\n                                                           totalPrice={items[el.id].totalPrice}\r\n                                                           onDeletePizza={onDeletePizza}\r\n                                                           id={el.id}\r\n                                                           minusItem={OnMinusItem}\r\n                                                           plusItem={OnPlusItem}\r\n                                                           size={el.activeSize}/>)}\r\n\r\n                        </div>\r\n                        <div className=\"cart__bottom\">\r\n                            <div className=\"cart__bottom-details\">\r\n                                <span> Total: <b>{totalCount} pc.</b> </span>\r\n                                <span> Order sum: <b>{totalPrice} Kč</b> </span>\r\n                            </div>\r\n                            <div className=\"cart__bottom-buttons\">\r\n                                <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                    <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\r\n                                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\"\r\n                                              strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    </svg>\r\n\r\n                                    <span>Back</span>\r\n                                </Link>\r\n                                <div className=\"button pay-btn\">\r\n                                    <span>Pay now</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"cart cart--empty\">\r\n                        <h2>\r\n                            Cart's empty.<i>😕</i>\r\n                        </h2>\r\n                        <p>\r\n                            Most likely, you haven't ordered a pizza yet.\r\n                            <br />\r\n                            To order a pizza, go to the main page.\r\n                        </p>\r\n                        <img src={emptyCartImage} alt=\"Empty cart\" />\r\n                        <Link to=\"/\" className=\"button button--black\">\r\n                            <span>Back</span>\r\n                        </Link>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","export const addPizzaToCart = (obj) => {\r\n    return {\r\n        type: \"ADD_PIZZA_CART\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: \"CLEAR_CART\"\r\n    }\r\n}\r\n\r\nexport const deletePizza = (id) => {\r\n    return {\r\n        type: \"DELETE_PIZZA_CART\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const minusItem = (id) => {\r\n    return {\r\n        type: \"MINUS_ITEM\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const plusItem = (id) => {\r\n    return {\r\n        type: \"PLUS_ITEM\",\r\n        payload: id\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport const setLoaded = (value) => {\r\n    return {\r\n        type: \"SET_LOADED\",\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const setPizzas = (items) => {\r\n    return {\r\n        type: \"SET_PIZZAS\",\r\n        payload: items\r\n    }\r\n}\r\n\r\nexport const fetchPizzas = (category, sortBy) => (dispatch) => {\r\n    dispatch(setLoaded(false));\r\n    axios.get(`/pizzas?${category!==0?`category=${category}`:\"\"}&_sort=${sortBy.type}&_order=desc`)\r\n        .then(res => {\r\n            dispatch(setLoaded(true));\r\n            dispatch(setPizzas(res.data));\r\n        }).catch(err => console.log(err));\r\n}\r\n\r\n","import React from 'react';\r\nimport {Categories, SortItems, PizzaItem, PizzaLoadingBlock} from \"../components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCategory, setSortBy} from \"../redux/actions/filters\";\r\nimport {fetchPizzas} from \"../redux/actions/setPizzas\";\r\nimport {addPizzaToCart} from \"../redux/actions/cart\";\r\nimport axios from \"axios\";\r\n\r\nconst categoryNames = [\"All\", \"Meat\", \"Vegetarian\", \"Grilled\", \"Spicy\", \"Closed pizza\"];\r\nconst sortItems = [\r\n        {name: \"popularity\", type: \"rating\", order: \"desc\"},\r\n        {name: \"price\", type: \"price\", order: \"desc\"},\r\n        {name: \"alphabetically\", type: \"name\", order: \"asc\"}\r\n    ];\r\n\r\nfunction Main() {\r\n    // axios.defaults.baseURL = \"https://us-central1-pizzafunction.cloudfunctions.net/api\";\r\n\r\n    const dispatch = useDispatch();\r\n    const {items, isLoading} = useSelector(({pizzas, filters}) => {\r\n        return {\r\n            items: pizzas.items,\r\n            isLoading: pizzas.isLoading\r\n        }\r\n    });\r\n    const cartItems = useSelector(({cart}) => cart.items);\r\n\r\n    const {category, sortBy} = useSelector(({filters}) => filters);\r\n\r\n    const onSelectCategory = React.useCallback((index) => {\r\n        dispatch(setCategory(index));\r\n    }, []);\r\n\r\n    const onClickSortType = React.useCallback((type) => {\r\n        dispatch(setSortBy(type))\r\n    }, []);\r\n\r\n    const onClickAddPizza = React.useCallback((obj) => {\r\n        dispatch(addPizzaToCart(obj));\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchPizzas(category, sortBy));\r\n    }, [category, sortBy]); // = componentDidMount\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container\">\r\n                <div className=\"content__top\">\r\n                    {/*<MenuListComposition />*/}\r\n                    <Categories activeCategory={category}\r\n                                onClickCategory={onSelectCategory}\r\n                                items={categoryNames}/>\r\n                    <SortItems  activeSortType={sortBy.type}\r\n                                items={sortItems}\r\n                                onClickSortType={onClickSortType}/>\r\n                </div>\r\n                <div className=\"content__items\">\r\n                    {\r\n                        isLoading ? items.map(el => <PizzaItem onClickAddPizza={onClickAddPizza}\r\n                                                               key={el.id}\r\n                                                               count={cartItems[el.id] && cartItems[el.id].items.length}\r\n                                                               {...el}/>) :\r\n                        Array(10).fill(0).map((_, index) =>\r\n                            (<PizzaLoadingBlock key={index} />))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","export const setSortBy = (sortBy) => {\r\n    return {\r\n        type: \"SET_SORT_BY\",\r\n        payload: sortBy\r\n    }\r\n}\r\n\r\nexport const setCategory = (category) => {\r\n    // debugger\r\n    return {\r\n        type: 'SET_CATEGORY',\r\n        payload: category\r\n    }\r\n}\r\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {Header} from \"./components\";\nimport {Cart, Main} from './pages';\n\n\nfunction App() {\n\n    return (\n        <div className=\"wrapper\">\n            <Header />\n            <Route exact path=\"/\" component={Main}/>\n            <Route path=\"/cart\" component={Cart}/>\n        </div>\n    )\n}\n\nexport default App;","const initState = {\r\n    sortBy: {\r\n        type: 'rating',\r\n        order: 'desc'\r\n    },\r\n    category: 0\r\n}\r\n\r\nexport const filters = (state = initState, action) => {\r\n    // debugger\r\n    if (action.type === \"SET_SORT_BY\") {\r\n        return {...state, sortBy: action.payload}\r\n    }\r\n    if (action.type === \"SET_CATEGORY\") {\r\n        return {...state, category: action.payload}\r\n    }\r\n    return state;\r\n}","import {setPizzas} from \"../actions/setPizzas\"\r\nimport {act} from \"@testing-library/react\";\r\n// import {useDispatch} from \"react-redux\";\r\n\r\nconst initState = {\r\n    items: [],\r\n    isLoading: false\r\n}\r\n\r\nexport const pizzas = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PIZZAS': {\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        }\r\n\r\n        case 'SET_LOADED': {\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n        }\r\n\r\n        default:  return state;\r\n    }\r\n    return state;\r\n}","const initState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n}\r\n\r\nconst getTotalPrice = arr => {\r\n    return arr.reduce((sum, object) => object.price + sum, 0)\r\n};\r\n\r\nexport const cart = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_PIZZA_CART\": {\r\n            const currentPizzaItems = !state.items[action.payload.id] //undefined?\r\n                ? [action.payload]\r\n                : [...state.items[action.payload.id].items, action.payload]\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload.id]: {\r\n                    items: currentPizzaItems,\r\n                    totalPrice: getTotalPrice(currentPizzaItems)\r\n                }\r\n            }\r\n\r\n            const items = Object.values(newItems).map(obj => {\r\n                return obj.items;\r\n            } );//Object.values(newItems) - получили тут массив объектов,\r\n            // затем через мап получили массив с items\r\n\r\n            const allPizzas = [].concat.apply([], items);\r\n            const totalPrice = getTotalPrice(allPizzas);\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount: allPizzas.length,\r\n                totalPrice: totalPrice\r\n              }\r\n        }\r\n        case \"DELETE_PIZZA_CART\": {\r\n\r\n            const newItems = {\r\n                ...state.items\r\n            }\r\n\r\n            const currentTotalPrice = newItems[action.payload].totalPrice;\r\n            const currentTotalCount = newItems[action.payload].items.length;\r\n\r\n            delete newItems[action.payload];\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalPrice: state.totalPrice - currentTotalPrice,\r\n                totalCount: state.totalCount - currentTotalCount\r\n            }\r\n        }\r\n        case \"MINUS_ITEM\": {\r\n            const oldItems = state.items[action.payload].items;\r\n            const newItems = oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems\r\n\r\n            const NewObjectItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newItems,\r\n                    totalPrice: getTotalPrice(newItems)\r\n                }\r\n            }\r\n\r\n            const items = Object.values(NewObjectItems).map(obj => {\r\n                return obj.items;\r\n            });\r\n\r\n            const allPizzas = [].concat.apply([], items);\r\n            const totalPrice = getTotalPrice(allPizzas);\r\n\r\n            return {\r\n                ...state,\r\n                items: NewObjectItems,\r\n                totalCount: allPizzas.length,\r\n                totalPrice: totalPrice\r\n            };\r\n        }\r\n        case \"PLUS_ITEM\": {\r\n            const newItems = [...state.items[action.payload].items, state.items[action.payload].items[0]]\r\n            const NewObjectItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newItems,\r\n                    totalPrice: getTotalPrice(newItems)\r\n                }\r\n            }\r\n            const items = Object.values(NewObjectItems).map(obj => {\r\n                return obj.items;\r\n            });\r\n\r\n            const allPizzas = [].concat.apply([], items);\r\n            const totalPrice = getTotalPrice(allPizzas);\r\n\r\n            return {\r\n                ...state,\r\n                items: NewObjectItems,\r\n                totalCount: allPizzas.length,\r\n                totalPrice: totalPrice\r\n            }\r\n        }\r\n\r\n        case \"CLEAR_CART\": {\r\n            return {\r\n                ...state,\r\n                items: {},\r\n                totalCount: 0,\r\n                totalPrice: 0\r\n            }\r\n        }\r\n        default:  return state;\r\n    }\r\n    return state;\r\n}","import {filters} from \"./filters\";\r\nimport {pizzas} from \"./pizzas\";\r\nimport {combineReducers} from \"redux\";\r\nimport {cart} from \"./cart\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    filters, pizzas, cart\r\n});","import {applyMiddleware, createStore, compose} from \"redux\";\r\nimport {rootReducer} from './reducers';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/app.scss';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\n// <React.StrictMode>\nReactDOM.render(\n\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}